<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>gitlab部署与使用</title>
      <link href="/2019/09/21/gitlab/"/>
      <url>/2019/09/21/gitlab/</url>
      
        <content type="html"><![CDATA[<h1 id="自动化运维三剑客–gitlab的安装"><a href="#自动化运维三剑客–gitlab的安装" class="headerlink" title="自动化运维三剑客–gitlab的安装"></a>自动化运维三剑客–gitlab的安装</h1><h2 id="gitlab的安装"><a href="#gitlab的安装" class="headerlink" title="gitlab的安装"></a>gitlab的安装</h2><p>gitlab和github的区别想必大家都懂，这里我就不再赘述</p><p>这里我来用阿里云学生服务器centos7来演示gitlab的安装过程</p><p>首先打开你的防火墙控制台，开启防火墙规则</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/%E6%88%AA%E5%9B%BE6.png" alt></p><p><strong>注(这里我用的是服务器安装，一般的服务器都默认安装了ssh的，服务器ssh这里可以输入命令也可以不用，如果是用虚拟机的就要一定要安装ssh，并且在命令前加上sudo)</strong></p><p>首先安装ssh，</p><pre><code>yum install -y curl policycoreutils-pythonopenssh-server</code></pre><p>将SSH服务设置成开机自启动，安装命令：</p><pre><code>systemctl enable sshd</code></pre><p>启动SSH服务，安装命令：</p><pre><code>systemctl start sshd</code></pre><p>安装防火墙：</p><pre><code>yum install firewalld systemd -y</code></pre><p>开启防火墙：</p><pre><code>service firewalld  start</code></pre><p>添加http服务到防火墙：</p><pre><code>firewall-cmd --permanent --add-service=http</code></pre><p>然后重启防火墙：</p><pre><code>systemctl reload firewalld</code></pre><p>安装Postfix以发送通知邮件：</p><pre><code>yum install postfix</code></pre><p>将postfix服务设置成开机自启动，安装命令：</p><pre><code>systemctl enable postfix</code></pre><p>启动postfix</p><pre><code>systemctl start postfix</code></pre><p><strong>注意：这里如果成功那么没啥，可能会出现以下这个问题</strong></p><p><code>Job for postfix.service failed because the control process exited with error code. See &quot;systemctl st</code></p><p>这个时候不要慌</p><p>修改/etc/postfix/main.cf这个文件</p><pre><code>vim /etc/postfix/main.cf</code></pre><p>修改这两个字段为：</p><pre><code>inet_interfaces = allinet_protocols = ipv4</code></pre><p>接下来添加gitlab镜像：(这里的我用的是centos7的，centos6的话另外找资料)</p><pre><code>wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-10.0.0-ce.0.el7.x86_64.rpm</code></pre><p>安装gitlab 安装命令：</p><pre><code>rpm -i gitlab-ce-10.0.0-ce.0.el7.x86_64.rpm</code></pre><p><strong>注意，这里可能出现如下错误</strong></p><p><code>warning: gitlab-ce-10.0.0-ce.0.el7.x86_64.rpm: Header V4 RSA/SHA1 Signature, key ID f27eab47: NOKEY</code> </p><p>这个是缺少gitlab 的依赖</p><p>下载依赖：</p><pre><code>yum -y install policycoreutils openssh-server openssh-clients postfix</code></pre><p>然后再执行：</p><pre><code>rpm -i gitlab-ce-10.0.0-ce.0.el7.x86_64.rpm</code></pre><p>然后修改gitlab的配置文件</p><pre><code>vim  /etc/gitlab/gitlab.rb</code></pre><p>找到external_url这个字段，把里面的值修改为<code>http://你的服务器ip:你的端口</code>，比如<code>http://36.102.3.26:8899</code>，然后保存退出</p><p><strong>这里注意啦！！！</strong></p><p>这里我用的是开启防火墙配置的，所以要先看看防火墙开启没有</p><pre><code>firewall-cmd --state</code></pre><p>如果没开启就开启防火墙：<code>systemctl stop firewalld.service</code></p><p>然后看一下你有没有开启你配置的端口</p><pre><code>firewall-cmd --zone=public --list-ports</code></pre><p>如果没有就添加端口，并且重启</p><pre><code>firewall-cmd --zone=public --add-port=8899/tcp --permanent   # 开放8899端口firewall-cmd --reload   # 配置立即生效</code></pre><p>然后执行命令</p><pre><code>gitlab-ctl reconfigure</code></pre><p>然后</p><pre><code>gitlab-ctl restart</code></pre><p>这样就可以通过你的服务器ip:你的端口就可以访问gitlab了，这个是成功画面</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/%E6%88%AA%E5%9B%BE7.png" alt></p><p>这个是要你重新配置你的密码，默认的账号是root</p><h2 id="502错误解决和优化"><a href="#502错误解决和优化" class="headerlink" title="502错误解决和优化"></a>502错误解决和优化</h2><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/%E6%88%AA%E5%9B%BE9.png" alt></p><p><strong>注意，第一时间是看错误日志，而不是立马去谷歌百度，因为每一个人的错误都是不同的</strong></p><p>第一时间要查看错误日志，而不是查百度，因为每个人的错误都不同</p><pre><code># 看看unicorn启动日志cat /var/log/gitlab/unicorn/unicorn_stderr.log# 然后再看看gitlab日志，看看是哪里出错tail -100 /var/log/gitlab/gitlab-rails/production.log</code></pre><p><strong>每个人的错误都不同，根据错误日志的问题再去百度谷歌才是正道理</strong></p><h3 id="端口错误问题"><a href="#端口错误问题" class="headerlink" title="端口错误问题"></a>端口错误问题</h3><p><strong>端口错误都是端口被占用，当然按照我上面的方法是不会出现这个情况的</strong></p><p>此时继续修改配置文件</p><pre><code>vim  /etc/gitlab/gitlab.rb</code></pre><p><strong>看看你的错误日志，我的是8080端口被占用，改端口就行了</strong></p><p>找到以下字段取消注释并且修改：</p><pre><code># unicorn[&#39;port&#39;] = 8090   #千万不要是原来的8899端口啊，8090也是我打开过的端口</code></pre><h3 id="内存爆满和内存消耗过大的问题"><a href="#内存爆满和内存消耗过大的问题" class="headerlink" title="内存爆满和内存消耗过大的问题"></a>内存爆满和内存消耗过大的问题</h3><p>但是最大的问题就是内存爆满，用命令看看<code>free -h</code>,或者用<code>htop</code>看看，我相信大部分人都跟我一样，物理内存爆满</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/%E6%88%AA%E5%9B%BE10.png" alt></p><p>用这两个命令一看！，swap去哪了，哦吼，查了一下阿里云默认不开启swap，那么看以下的方法</p><h4 id="使用swap分区来减少内存消耗"><a href="#使用swap分区来减少内存消耗" class="headerlink" title="使用swap分区来减少内存消耗"></a>使用swap分区来减少内存消耗</h4><p>阿里云默认情况下是不启用swap的，不通过取消swap降低磁盘IO占用率怎么让你去买他更好的服务器呢，这里不多哔哔</p><ol><li>查看当前系统中是否已经启用swap分区</li></ol><pre><code>cat /proc/swaps</code></pre><ol start="2"><li>如果没有启用swap分区功能，则新建一个专门的文件用于swap分区</li></ol><pre><code>dd if=/dev/zero of=/data/swap bs=512 count=8388616</code></pre><p><strong>swap的大小是count的大小乘以bs大小，上面命令的大小是4294971392，即4GB</strong></p><ol start="3"><li>通过mkswap命令将上面新建出的文件做成swap分区</li></ol><pre><code>mkswap /data/swap</code></pre><ol start="4"><li>查看内核参数vm.swappiness中的数值是否为0，如果为0则根据实际需要调整成30或者60</li></ol><pre><code>cat /proc/sys/vm/swappinesssysctl -w vm.swappiness=60#永久修改若想永久修改，则编辑/etc/sysctl.conf文件，改文件中有vm.swappiness变量配置，默认为0</code></pre><p><strong>注：若想永久修改，则编辑/etc/sysctl.conf文件</strong></p><ol start="5"><li>启用此交换分区的交换功能</li></ol><pre><code>swapon /data/swapecho “/data/swap swap swap defaults 0 0” &gt;&gt; /etc/fstab</code></pre><ol start="6"><li>然后再看看swap分区是否启动</li></ol><pre><code>cat /proc/swaps </code></pre><ol start="7"><li>然后重启gitlab看看</li></ol><pre><code>gitlab-ctl restart</code></pre><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/%E6%88%AA%E5%9B%BE11.png" alt></p><p>哦吼，这不就，好起来了吗</p><p>再运行gitlab看看</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/%E6%88%AA%E5%9B%BE12.png" alt></p><p>运行速度如丝般顺滑，刚部署好不知道多少倍，除此之外可能还有其他的bug，但是这个看错误日志修改就好了</p><p><strong>注意：如果修改了配置文件，一定要执行以下命令</strong></p><pre><code>gitlab-ctl reconfiguregitlab-ctl restart</code></pre><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/%E6%88%AA%E5%9B%BE8.png" alt></p><p><strong>如果配置了还是502，耐心等一等，等那么一分钟左右就好了</strong></p><h2 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h2><p>​    这个运行速度慢折腾了我一下午，问题归根结底就是…..服务器配置太烂了，性能差就会经常出现502，因为官方推荐的服务器性能是最低 双核 + 8GB RAM，所以这里只能使用swap才能正常使用</p><p>​    gitlab的使用方法是和github差不多的，可以用git命令行执行，也可以用sourcetree直接clone下来</p><p><strong>解决问题使用到的博客</strong></p><blockquote><p><a href="https://blog.csdn.net/qq_25283709/article/details/78207881" target="_blank" rel="noopener">gitlab服务器经常出现502(阿里云搭建)</a></p></blockquote><blockquote><p><a href="https://yq.aliyun.com/articles/52098" target="_blank" rel="noopener">阿里云云主机添加swap分区与swap性能优化</a></p></blockquote><blockquote><p><a href="https://blog.csdn.net/wanchaopeng/article/details/84771195" target="_blank" rel="noopener">gitlab占用内存过大</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 自动化运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用gitbook搭建github上的书城</title>
      <link href="/2019/09/21/gitbook/"/>
      <url>/2019/09/21/gitbook/</url>
      
        <content type="html"><![CDATA[<h1 id="使用gitbook搭建github上的书城"><a href="#使用gitbook搭建github上的书城" class="headerlink" title="使用gitbook搭建github上的书城"></a>使用gitbook搭建github上的书城</h1><h2 id="gitbook的安装和使用"><a href="#gitbook的安装和使用" class="headerlink" title="gitbook的安装和使用"></a>gitbook的安装和使用</h2><p>安装Gitbook前应该先安装node.js，安装这里就不赘述了，直接进入node交互界面</p><pre><code>$ npm install gitbook-cli -g</code></pre><p>检验是否安装成功</p><pre><code>$ gitbook -V</code></pre><p>进入一个空文件夹</p><pre><code>$ gitbook init</code></pre><p>然后会创建 <code>README.md</code> 和 <code>SUMMARY.md</code> 这两个文件， <code>README.md</code> 是说明文件， <code>SUMMARY.md</code>是书的章节目录，然后输入</p><pre><code>$ gitbook serve</code></pre><p>就可以创建gitbook了，默认端口是4000，地址输入<a href="http://localhost:4000就可以进入页面，可以用一些markdown编辑器来写，然后就可以在网页上看到实时编辑的内容了。" target="_blank" rel="noopener">http://localhost:4000就可以进入页面，可以用一些markdown编辑器来写，然后就可以在网页上看到实时编辑的内容了。</a></p><p>目录结构如图</p><p><img src="https://img-blog.csdnimg.cn/20190720225822792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTM3NzI3Mw==,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190720225836562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTM3NzI3Mw==,size_16,color_FFFFFF,t_70" alt></p><p>gitbook的目录结构就是缩进，语法结构一看就懂</p><p>gitbook写完后可以输入命令</p><pre><code>$ gitbook build</code></pre><p>使用这个命令后在本地会生成一个_book的文件夹，里面是自动生成的html文件，这些htm文件在本地打开是不具备跳转效果的，要部署到网上才可以具备全部效果</p><h2 id="部署gitbook到github上"><a href="#部署gitbook到github上" class="headerlink" title="部署gitbook到github上"></a>部署gitbook到github上</h2><p>根据上面的操作，通过 <code>$ gitbook build</code> 把</p><p>先在自己的github上创建一个新的仓库，然后把刚刚_book里面的文件上传到github上，这部分的方法是个程序员都应该掌握，这里不再赘述，上传完之后点击setting，拉倒最下面有个github page的，如图</p><p><img src="https://img-blog.csdnimg.cn/20190720230934856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTM3NzI3Mw==,size_16,color_FFFFFF,t_70" alt></p><p>上面绿色这个地址就是你的网上书籍地址了</p><p>如果要给你自己的gitbook设置一个域名，方法如我上一篇<a href="https://www.ly-blog.top/2019/09/05/hello-world/" target="_blank" rel="noopener">博客</a>的自定义域名部分</p><h2 id="gitbook-安装插件"><a href="#gitbook-安装插件" class="headerlink" title="gitbook 安装插件"></a>gitbook 安装插件</h2><p>单单使用gitbook来写，写出来的界面不是特别的好看，功能也没有那么多，gitbook是可以添加插件的，比如返回顶部、折叠、添加版权信息、分享等功能</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitbook </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo搭建个人博客并部署域名</title>
      <link href="/2019/09/05/hexo/"/>
      <url>/2019/09/05/hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="使用hexo和github搭建个人博客"><a href="#使用hexo和github搭建个人博客" class="headerlink" title="使用hexo和github搭建个人博客"></a>使用hexo和github搭建个人博客</h1><h2 id="搭建环境准备"><a href="#搭建环境准备" class="headerlink" title="搭建环境准备"></a>搭建环境准备</h2><ol><li><p>安装node</p><p><a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/</a></p><p>(电脑是多少位的就下载多少位)</p><p>安装成功之后在cmd输入命令</p><pre><code>node -v</code></pre><p>可以看到版本就安装成功</p></li><li><p>安装Git</p><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p><p>git配置百度查一查，这里不多说</p></li><li><p>安装Hexo</p><pre><code>$ npm install -g hexo</code></pre><p>输入 <code>hexo -v</code>可以看到版本就安装成功</p></li></ol><h2 id="开始第一个博客"><a href="#开始第一个博客" class="headerlink" title="开始第一个博客"></a>开始第一个博客</h2><p>在命令行模式下进入个空文件夹，输入</p><pre><code>hexo init</code></pre><p>就开始创建hexo博客文件(可能需要一定时间)</p><p>然后输入命令安装博客所需要的包</p><pre><code>npm install</code></pre><p>此时博客就已经安装好了</p><p>输入命令开启你的第一个博客</p><pre><code>hexo server#或者hexo s</code></pre><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/01.png" alt></p><p>如图所示，第一个博客就已经搭建好了</p><p>​    博客的主题是可以修改的，可以参照网上流传的主题，有很多很漂亮的主题可以使用，比如我这里使用的是<a href="https://blinkfox.github.io/" target="_blank" rel="noopener">hexo-theme-matery-1.0.1</a>,主题可以参照这个网站</p><p>​    需要修改主题的话只需要把下载下来的主题文件,放到刚刚搭建的博客文件夹的theme文件夹下,然后修改博客根目录的_config.yml文件的theme字段修改成主题的名字即可</p><pre><code>theme: hexo-theme-matery-1.0.1</code></pre><p>这里我用的是上面提到的主题，效果如下</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/05.png" alt></p><h3 id="添加markdown文章"><a href="#添加markdown文章" class="headerlink" title="添加markdown文章"></a>添加markdown文章</h3><p>接下来我要添加自己的字段</p><p>在根目录的<code>_posts</code>文件夹就是首页展示的文章</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/02.png" alt></p><p>直接在<code>_posts</code>文件夹添加markdown文件就可以在前端展示文章</p><h3 id="添加标签tags页"><a href="#添加标签tags页" class="headerlink" title="添加标签tags页"></a>添加标签tags页</h3><p>(如果你的source目录没有<code>tags/index.md</code> 文件，那么就看以下步骤)</p><p>就使用命令添加<code>tags</code>文件夹</p><pre><code>hexo new page &quot;tags&quot;</code></pre><p>然后在<code>tags</code>文件夹下添加<code>index.md</code>文件，并且至少添加内容，</p><pre><code>---title: tagsdate: 2019-09-4 18:37.25type: &quot;tags&quot;layout: &quot;tags&quot;---</code></pre><p>然后在<code>_posts</code>文件夹下的markdown文件的头部添加tags字段</p><p>例如：</p><pre><code>---title: hello worldauthor: LYtags:    - Hexo    - github---</code></pre><p>tags最好用这种方法来写，多个标签就填多个</p><p>效果截图：</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/06.png" alt></p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/07.png" alt></p><h3 id="添加分类categories页"><a href="#添加分类categories页" class="headerlink" title="添加分类categories页"></a>添加分类categories页</h3><p>(如果你的source目录没有<code>categories/index.md</code> 文件，那么就看以下步骤)</p><p>使用命令添加<code>categories</code>文件夹</p><pre><code>hexo new page &quot;categories&quot;</code></pre><p>然后在<code>categories</code>文件夹下添加<code>index.md</code>文件，并且至少添加内容，</p><pre><code>---title: categoriesdate: 2019-09-4 18:39.36type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><p>然后在markdown文件的头部添加<code>categories</code>字段</p><p>例如</p><pre><code>---title: hello worldauthor: LYtags:    - Hexo    - githubcategories:    - hexo---</code></pre><p>效果如图:</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/08.png" alt></p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/09.png" alt></p><h3 id="新建关于我about页"><a href="#新建关于我about页" class="headerlink" title="新建关于我about页"></a>新建关于我about页</h3><p>(如果你的source目录没有<code>about/index.md</code> 文件，那么就看以下步骤)</p><p>使用命令添加<code>categories</code>文件夹</p><pre><code>hexo new page &quot;about&quot;</code></pre><p>然后在<code>about</code>文件夹下添加<code>index.md</code>文件，并且至少添加内容，</p><pre><code>---title: aboutdate: 2019-09-4 18:41.56type: &quot;about&quot;layout: &quot;about&quot;---</code></pre><p>效果截图:</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/11.png" alt></p><p>about页面的内容是可以通过<code>themes\hexo-theme-matery-1.0.1\_config.yml</code>来修改</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/12.png" alt></p><h3 id="新建友情连接-friends-页（可选的）"><a href="#新建友情连接-friends-页（可选的）" class="headerlink" title="新建友情连接 friends 页（可选的）"></a>新建友情连接 friends 页（可选的）</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>然后在<code>friends</code>文件夹下添加<code>index.md</code>文件，并且至少添加内容，</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> 2019<span class="token punctuation">-</span>09<span class="token punctuation">-</span>4 18<span class="token punctuation">:</span><span class="token number">45.36</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"ttps://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><p><strong>文章还有一个description字段，是显示在主页的摘要，如果不填就是默认取内容的前70个字</strong></p><h2 id="Hexo-Theme-Matery主题的配置"><a href="#Hexo-Theme-Matery主题的配置" class="headerlink" title="Hexo-Theme-Matery主题的配置"></a>Hexo-Theme-Matery主题的配置</h2><p>Hexo-Theme-Matery主题的其他配置可以看他们的<a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/#toc-heading-1" target="_blank" rel="noopener">主题文档</a></p><p>如果要对Hexo-Theme-Matery主题进行个性化的修改的话，可以参考这个<a href="https://www.jianshu.com/p/2e6ae2123d57" target="_blank" rel="noopener">大神的文章</a></p><p>这里对上面主题修改的文章有说不明白的地方进行补充说明</p><h3 id="自定义每日一言"><a href="#自定义每日一言" class="headerlink" title="自定义每日一言"></a>自定义每日一言</h3><p>如果你不喜欢文章里面的每日一言，想换一个比如<a href="https://api.ooopn.com/ciba/api.php?type=json" target="_blank" rel="noopener">金山每日一言</a>那些的话，就直接在主题文件里面的hexo-theme-matery-1.0.1/layout/index.exj文件添加个ajax代码<br>例如:</p><pre><code>&lt;script&gt;(function () {        $.ajax({            url: &quot;https://api.ooopn.com/ciba/api.php?type=json&quot;,//向本地的json文件发送请求            type: &quot;GET&quot;,            success: function (data) {                ciba=data.ciba  #ciba就是你插入片段的id                document.getElementById(&quot;ciba&quot;).innerHTML=ciba            },            error: function (error) {                document.getElementById(&quot;ciba&quot;).innerHTML=error            }        })    })();&lt;/script&gt;</code></pre><h3 id="评论的gittalk配置"><a href="#评论的gittalk配置" class="headerlink" title="评论的gittalk配置"></a>评论的gittalk配置</h3><p>gittalk主题配置说明没有说清楚，我这里补充一下，因为主题配置说推荐gittalk，所以我这里也拿gittalk来说明</p><p>首先要申请github授权，<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">申请地址</a></p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/1.png" alt></p><ul><li>Application name：项目名，随便填</li><li>Homepage URL：博客地址，也就是要访问的地址，我的是<a href="https://373005226.github.io" target="_blank" rel="noopener">https://373005226.github.io</a></li><li>Application description：应用描述，这个随便填</li><li>Authorization callback URL:这个如果你有自己的域名就填自己的域名，没有就和上面的Homepage URL一样就好了</li></ul><p>输入完后会给你一个Client ID和Client Secret</p><p>打开主题配置文件的_config.yml，找到gittalk的这一行</p><pre><code>gitalk:  enable: true        #默认是false，改为true才可以开启评论  owner:             #这里是你的github用户名&#39;  repo:             #这里是你的博客地址  oauth:    clientId:         #刚刚申请的id    clientSecret:     #刚刚申请的密码  admin:             #一般都是你的github用户名了</code></pre><p>然后</p><pre><code>hexo cleanhexo ghexo d</code></pre><p>上传到你的博客就可以看到评论地址搞定了</p><h2 id="hexo的常见命令"><a href="#hexo的常见命令" class="headerlink" title="hexo的常见命令"></a>hexo的常见命令</h2><p>常见命令</p><pre><code>hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）hexo deploy #部署到GitHubhexo help  # 查看帮助hexo version  #查看Hexo的版本</code></pre><p>缩写：</p><pre><code>hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy</code></pre><p>组合命令：</p><pre><code>hexo s -g #生成并本地预览hexo d -g #生成并上传</code></pre><h2 id="将hexo博客部署到github上"><a href="#将hexo博客部署到github上" class="headerlink" title="将hexo博客部署到github上"></a>将hexo博客部署到github上</h2><p>首先要注册一个github账号，注册步骤就跳过了</p><p>新建一个仓库，名字格式最好如下:</p><p>账号名.github.io</p><p>比如我的账号是373005226，仓库的名字就是373005226.github.io</p><p>然后新建一个index.html文件，内容随便写，如图</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/13.png" alt></p><p>然后输入刚刚的仓库名就可以看到自己刚刚写的东西了</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/14.png" alt></p><p>紧接着在博客源文件的_config.yml文件下修改如下字段:</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/15.png" alt></p><p>!!!格式要像我这样一样啊，或者填<a href="https://github.com/373005226/373005226.github.io.git" target="_blank" rel="noopener">https://github.com/373005226/373005226.github.io.git</a></p><p>然后再命令行输入这三行代码</p><pre><code>hexo cleanhexo ghexo d</code></pre><p>根据上述步骤就可以上传到github了</p><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><p>github可以绑定自己买的域名</p><p>域名可以去各大服务商买，这里我用的是阿里云</p><p>购买完域名后，进入域名解析</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/16.png" alt></p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/17.png" alt></p><p>这里的记录值好像是不一定的，记录值就是你打开cmd命令行，ping 你的账号.github.io</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/18.png" alt></p><p>先使用<code>hexo d</code>上传好代码到github上之后，然后在github上新建一个CNAME(没有后缀)文件，里面填写你购买的域名(加不加www都可以)<br><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/19.png" alt></p><p>然后点击settings找到Github Pages填写自己的域名</p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/21.png" alt></p><p><img src="https://txy-tc-ly-1256104767.cos.ap-guangzhou.myqcloud.com/hexo/22.png" alt></p><p>然后就可以绑定自己的域名了</p><h2 id="写markdown注意事项"><a href="#写markdown注意事项" class="headerlink" title="写markdown注意事项"></a>写markdown注意事项</h2><p>写markdown有时候本地编辑没问题，但是上传到服务器的图片有时候是失效的，所以最好图片之类的媒体资源放到腾讯云、七牛云等服务商上面。他们都有对象存储功能，可以把媒体文件上传到他们的服务器，然后再通过URL地址来访问，这样就不用怕自己本地写的markdown文件上传到服务器的图片资源访问不了的问题了</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
